$SET TADS                                                               10000000          
$LINEINFO                                                               10000100          
$VERSION 01.001.001                                                     10000200          
 PROCEDURE LINCOFF2MDB(PARAM);                                          10000300          
 ARRAY                 PARAM[*];                                        10000400          
 BEGIN                                                                  10000500          
 DEFINE                                                                 10000600          
   K = 1024 #                                                           10000700          
  ,CAND(X,Y) = IF(X)THEN(Y)ELSE FALSE #                                 10000800          
  ,COR(X,Y) = IF(X)THEN TRUE ELSE(Y) #                                  10000900          
  ,NIL = 0 #                                                            10001000          
  ,c = , #                                                              10001100          
  ,szBytes = 1 #                                                        10001200          
  ,vCrLf = 48"0D25" #                                                   10001300          
  ;                                                                     10001400          
 LABEL                                                                  10001500          
   exit                                                                 10001600          
  ;                                                                     10001700          
 EBCDIC ARRAY                                                           10001800          
   dummy[0:1*K]                                                         10001900          
  ;                                                                     10002000          
 HEX ARRAY                                                              10002100          
   hDummy[0] = dummy                                                    10002200          
  ;                                                                     10002300          
 FILE                                                                   10002400          
   LINCOFF                                                              10002500          
     (KIND=DISK                                                         10002600          
     ,MYUSE=IN                                                          10002700          
     ,FILETYPE=7                                                        10002800          
%    ,title="ARC/INPUT/LINCOFF."                                        10002850ADC-191113
     )                                                                  10002900          
  ,CARD                                                                 10003000          
     (KIND=READER                                                       10003100          
     ,MYUSE=IN                                                          10003200          
     ,FILETYPE=7                                                        10003300          
     )                                                                  10003400          
  ,LINE                                                                 10003500          
     (KIND=PRINTER                                                      10003600          
     )                                                                  10003700          
  ,TERM                                                                 10003800          
    (KIND=REMOTE                                                        10003900          
    ,MYUSE=OUT                                                          10004000          
    ,MAXRECSIZE=1920                                                    10004100          
    ,UNITS=CHARACTERS                                                   10004200          
    )                                                                   10004300          
  ;                                                                     10004400          
 INTEGER                                                                10004500          
   len                                                                  10004600          
  ,l                                                                    10004700          
  ,inx                                                                  10004800          
  ;                                                                     10004900          
 POINTER                                                                10005000          
   p                                                                    10005100          
  ;                                                                     10005200          
 TRUTHSET                                                               10005300          
   IDNTOKS (ALPHA OR "-0123456789")                                     10005400          
  ;                                                                     10005500          
                                                                        10005600          
 DEFINE                                                                 10005700          
              TDB_SIZE                =  0                    #,        10005800          
                CDB_SIZEINITIAL       =  4*K                  #,        10005900          
                CDB_OVFLW             =  2                    #,        10006000          
                CDB_INCR              =  4*K                  #,        10006100          
              TDB_VERSION             =  1].[47:16            #,        10006200          
                CDB_VERSION           =  1                    #,        10006300          
              TDB_FIRSTAVAIL          =  1].[31:16            #,        10006400          
                CDB_FIRSTAVAILINITIAL =  3                    #,        10006500          
              TDB_FIRSTISPEC          =  1].[15:16            #,        10006600          
              TDB_LASTISPEC           =  2].[47:16            #,        10006700          
                                                                        10006800          
      VDB_SIZE                =  TABDB[TDB_SIZE]                  #,    10006900          
      VDB_VERSION             =  TABDB[TDB_VERSION]               #,    10007000          
      VDB_FIRSTAVAIL          =  TABDB[TDB_FIRSTAVAIL]            #,    10007100          
      VDB_FIRSTISPEC          =  TABDB[TDB_FIRSTISPEC]            #,    10007200          
      VDB_LASTISPEC           =  TABDB[TDB_LASTISPEC]             #,    10007300          
                                                                        10007400          
              TDB_PREVGROUP           =  0].[47:16            #,        10007500          
              TDB_NEXTGROUP           =  0].[31:16            #,        10007600          
              TDB_FIRSTITEM           =  0].[15:16            #,        10007700          
              TDB_LASTITEM            =  1].[47:16            #,        10007800          
              TDB_OCCURS              =  1].[31:16            #,        10007900          
              TDB_PIC                 =  1].[15:02            #,        10008000          
                CDB_ALPHA             =  1                    #,        10008100          
                CDB_NUMERIC           =  2                    #,        10008200          
                CDB_GROUP             =  0                    #,        10008300          
              TDB_OFFSET              =  2].[47:16            #,        10008400          
              TDB_LENGTH              =  2].[31:16            #,        10008500          
              TDB_DECIMALS            =  2].[15:16            #,        10008600          
              TDB_NAME                =  3                    #,        10008700          
                                                                        10008800          
                CDB_GROUPSIZE         =  3                    #,        10008900          
                                                                        10009000          
      VDB_PREVGROUP(inx)      =  TABDB[inx+TDB_PREVGROUP]         #,    10009100          
      VDB_NEXTGROUP(inx)      =  TABDB[inx+TDB_NEXTGROUP]         #,    10009200          
      VDB_FIRSTITEM(inx)      =  TABDB[inx+TDB_FIRSTITEM]         #,    10009300          
      VDB_LASTITEM(inx)       =  TABDB[inx+TDB_LASTITEM]          #,    10009400          
      VDB_OCCURS(inx)         =  TABDB[inx+TDB_OCCURS]            #,    10009500          
      VDB_PIC(inx)            =  TABDB[inx+TDB_PIC]               #,    10009600          
      VDB_OFFSET(inx)         =  TABDB[inx+TDB_OFFSET]            #,    10009700          
      VDB_LENGTH(inx)         =  TABDB[inx+TDB_LENGTH]            #,    10009800          
      VDB_DECIMALS(inx)       =  TABDB[inx+TDB_DECIMALS]          #,    10009900          
      PDB_NAME(inx)           =POINTER(TABDB[inx+TDB_NAME])       #;    10010000          
                                                                        10010100          
 ARRAY                                                                  10010200          
   TABDB[0:CDB_SIZEINITIAL]                                             10010300          
  ;                                                                     10010400          
                                                                        10010500          
 INTEGER PROCEDURE getAreaTABDB(sz);                                    10010600          
   VALUE                        sz;                                     10010700          
   INTEGER                      sz;                                     10010800          
   BEGIN                                                                10010900          
   COMMENT                                                              10011000          
     Retorna un indice al segmento de la tabla TABPK del tamano         10011100          
     sz bytes solicitado                                                10011200          
   ;                                                                    10011300          
                                                                        10011400          
   getAreaTabDB := VDB_FIRSTAVAIL;                                      10011500          
   IF (SIZE(TABDB)<=(VDB_FIRSTAVAIL+(sz+5)DIV 6)+CDB_OVFLW) THEN        10011600          
     BEGIN                                                              10011700          
     RESIZE(TABDB, MIN(65*K, ((VDB_FIRSTAVAIL+(sz+5)DIV 6)+CDB_INCR)),  10011800          
            RETAIN);                                                    10011900          
     VDB_SIZE := SIZE(TABDB);                                           10012000          
     END;                                                               10012100          
   REPLACE POINTER(TABDB[VDB_FIRSTAVAIL])                               10012200          
        BY 0 FOR ((sz+5)DIV 6) WORDS;                                   10012300          
   VDB_FIRSTAVAIL := (VDB_FIRSTAVAIL + (sz+5)DIV 6) DIV 1;              10012400          
   END of getAreaTABDB;                                                 10012500          
                                                                        10012600          
 PROCEDURE addIspec(inx);                                               10012700          
   VALUE            inx;                                                10012800          
   INTEGER          inx;                                                10012900          
   BEGIN                                                                10013000          
                                                                        10013100          
   IF VDB_FIRSTISPEC = NIL THEN                                         10013200          
     VDB_FIRSTISPEC := inx DIV 1                                        10013300          
   ELSE                                                                 10013400          
     BEGIN                                                              10013500          
     VDB_NEXTGROUP(VDB_LASTISPEC) := inx DIV 1;                         10013600          
     VDB_PREVGROUP(inx) := VDB_LASTISPEC DIV 1;                         10013700          
     END;                                                               10013800          
   VDB_LASTISPEC := inx DIV 1;                                          10013900          
   END of addIspec;                                                     10014000          
                                                                        10014100          
 PROCEDURE addChild(inxFather, inx);                                    10014200          
   VALUE            inxFather, inx;                                     10014300          
   INTEGER          inxFather, inx;                                     10014400          
   BEGIN                                                                10014500          
                                                                        10014600          
   IF VDB_FIRSTITEM(inxFather) = NIL THEN                               10014700          
     VDB_FIRSTITEM(inxFather) := inx DIV 1                              10014800          
   ELSE                                                                 10014900          
     BEGIN                                                              10015000          
     VDB_NEXTGROUP(VDB_LASTITEM(inxFather)) := inx DIV 1;               10015100          
     VDB_PREVGROUP(inx) := VDB_LASTITEM(inxFather) DIV 1;               10015200          
     END;                                                               10015300          
   VDB_LASTITEM(inxFather) := inx DIV 1;                                10015400          
   END of addChild;                                                     10015500          
                                                                        10015600          
 BOOLEAN PROCEDURE getLINCOFF;                                          10015700          
   BEGIN                                                                10015800          
   DEFINE                                                               10015900          
     procedureName = getLINCOFF #                                       10016000          
    ,CFILE = LINCOFF #                                                  10016100          
    ,cfile_error (TEXT) =                                               10016200          
        BEGIN                                                           10016300          
        END #                                                           10016400          
    ;                                                                   10016500          
   EBCDIC ARRAY                                                         10016600          
     dummy [0:1*K]                                                      10016700          
    ;                                                                   10016800          
   BOOLEAN                                                              10016900          
     syntaxOnly                                                         10017000          
    ,syntaxErrors                                                       10017100          
    ,paramOnly                                                          10017200          
    ;                                                                   10017300          
   INTEGER                                                              10017400          
     file_error_count                                                   10017500          
    ;                                                                   10017600          
                                                                        10017700          
%$INCLUDE LINCOFF2MDB_INCLUDE 100100-99999998                           10017800          
    DEFINE       BADTOK                  = 48"00"                #,     10018000ADC-191113
                 IDNTOK                  = 48"01"                #,     10018200ADC-191113
                 RESTOK                  = 48"02"                #,     10018400ADC-191113
                 NUMTOK                  = 48"03"                #,     10018600ADC-191113
                 STRTOK                  = 48"04"                #,     10018800ADC-191113
                 CHRTOK                  = 48"05"                #,     10019000ADC-191113
                 TXTTOK                  = 48"06"                #,     10019200ADC-191113
                 EOLTOK                  = 48"07"                #,     10019400ADC-191113
                 ETXTOK                  = 48"08"                #;     10019600ADC-191113
                                                                        10019800ADC-191113
    VALUE ARRAY TABKEYWORD                                              10020000ADC-191113
         (                                                              10020200ADC-191113
          48"01""X          ", RESTOK,                                  10020400ADC-191113
          48"02""V9         ", RESTOK,                                  10020600ADC-191113
          48"03""PIC        ", RESTOK,                                  10020800ADC-191113
          48"06""OCCURS     ", RESTOK,                                  10021000ADC-191113
          5(0)                                                          10021200ADC-191113
         );                                                             10021400ADC-191113
                                                                        10021600ADC-191113
    DEFINE       MAXESCSTACK    = 50 #;                                 10021800ADC-191113
    DEFINE        KWENTRYSIZE            = 3                     #,     10022000ADC-191113
                  KWINXMAX               = 4                     #,     10022200ADC-191113
                 TKWTOKEN                = 0                     #,     10022400ADC-191113
                 TKWTOKENLENGTH          = 0].[47:SZBITS         #,     10022600ADC-191113
                 TKWTYPETOK              = 2                     #;     10022800ADC-191113
                                                                        10023000ADC-191113
    DEFINE CASE_ESCAPE =                                                10023200ADC-191113
           #;                                                           10023400ADC-191113
 %----------------------------------------------------------------------10023600ADC-191113
    DEFINE     SZBYTES                 = 1                     #,       10023800ADC-191113
               SZBITS1                 = 7                     #,       10024000ADC-191113
               SZBITS                  = 8                     #,       10024200ADC-191113
               SZTYPETOK               = 1                     #,       10024400ADC-191113
               SZBYTESF(SZ)            = ((SZ) DIV 1).[7:48] FOR 1 #,   10024600ADC-191113
               SZTYPETOKF (SZ)         = ((SZ) DIV 1).[7:48] FOR 1 #,   10024800ADC-191113
               BADENTITY               = 1                     #,       10025000ADC-191113
               ISNTENTITY              = 2                     #;       10025200ADC-191113
    DEFINE RETURN (RESULT) =                                            10025400ADC-191113
        BEGIN                                                           10025600ADC-191113
        ENTITYRESULT := RESULT;                                         10025800ADC-191113
        GO TO EXIT;                                                     10026000ADC-191113
        END OF RETURN #;                                                10026200ADC-191113
    ARRAY        ESCSTACK [0:MAXESCSTACK];                              10026400ADC-191113
    POINTER      PTOKEN,                                                10026600ADC-191113
                 PTOK;                                                  10026800ADC-191113
    REAL         SZTOKEN,                                               10027000ADC-191113
                 IESCSTACK;                                             10027200ADC-191113
 %PROCEDURE NEXTTOKEN; FORWARD;                                         10027400ADC-191113
 %PROCEDURE ERROR (MSG); VALUE MSG; STRING MSG; FORWARD;                10027600ADC-191113
 %PROCEDURE SEND  (MSG); VALUE MSG; STRING MSG; FORWARD;                10027800ADC-191113
 BOOLEAN PROCEDURE KEYWORD (TYPETOK);REAL TYPETOK; FORWARD;             10028000ADC-191113
 REAL PROCEDURE ESCAPE; FORWARD;                                        10028200ADC-191113
 %----------------------------------------------------------------------10028400ADC-191113
 REAL PROCEDURE GETPROGRAM;                                             10028600ADC-191113
 FORWARD;                                       %%----00500100          10028800ADC-191113
 REAL PROCEDURE GETLEVEL(inxFather, prevLevel, off, len);               10029000ADC-191113
 VALUE inxFather, prevLevel, off;                                       10029200ADC-191113
 INTEGER inxFather, prevLevel,off,len;                                  10029400ADC-191113
 FORWARD;                                       %%----00502600          10029600ADC-191113
%$INCLUDE NXTK_FROMDASDL                                                10029800ADC-191113
 %----------------------------------------------------------------------1003000001.001.001
 ARRAY                                                                  1003020001.001.001
   TOKARRAY [0:60]                                                      1003040001.001.001
  ;                                                                     1003060001.001.001
 REAL                                                                   10030800ADC-180810
   VLTOKEN                                                              10031000ADC-180810
  ;                                                                     10031200ADC-180810
                                                                        10031400ADC-180810
$INCLUDE "LINCOFF2MDB/SYMBOL/NEXTTOKEN/BASE"                            10031600ADC-191113
                                                                        10031800ADC-180810
 NEXTTOKEN_DASDL                                                        10032000ADC-180813
   NT                                                                   10032200ADC-180810
  ;                                                                     10032400ADC-180810
                                                                        10032600ADC-180810
 DEFINE                                                                 10032800ADC-180810
   PROCESO = NT.PROCESO #                                               10033000ADC-180920
  ,INICIO = NT.INICIO #                                                 10033200ADC-180920
  ,NEXTTOKEN = NT.NEXTTOKEN #                                           10033400ADC-180810
  ,ERROR = NT.ERROR #                                                   10033600ADC-180810
  ,SEND = NT.SEND #                                                     10033800ADC-180810
  ;                                                                     10034000ADC-180810
                                                                        10034200ADC-180810
%-----------------------------------------------------------------------1003440001.001.001
 BOOLEAN PROCEDURE KEYWORD (TYPETOK);                                   10034600ADC-191113
  REAL  TYPETOK;                                                        10034800ADC-191113
  BEGIN                                                                 10035000ADC-191113
  REAL         IMIN, IMAX, I, INX;                                      10035200ADC-191113
  IMAX := KWINXMAX;                                                     10035400ADC-191113
  DO   BEGIN                                                            10035600ADC-191113
    I   := (IMIN + IMAX) DIV 2;                                         10035800ADC-191113
    INX := I * KWENTRYSIZE;                                             10036000ADC-191113
    IF (PTOK = POINTER(TABKEYWORD[INX+TKWTOKEN])                        10036200ADC-191113
               FOR SZBYTES+SZTOKEN)                                     10036400ADC-191113
    THEN BEGIN                                                          10036600ADC-191113
         KEYWORD := TRUE;                                               10036800ADC-191113
         TYPETOK := TABKEYWORD [INX+TKWTYPETOK];                        10037000ADC-191113
         IMIN    := IMAX + 1;                                           10037200ADC-191113
         END                                                            10037400ADC-191113
    ELSE IF (PTOK < POINTER(TABKEYWORD [INX+TKWTOKEN])                  10037600ADC-191113
                    FOR SZBYTES+SZTOKEN)                                10037800ADC-191113
    THEN IMAX := I - 1                                                  10038000ADC-191113
    ELSE IMIN := I + 1;                                                 10038200ADC-191113
    END                                                                 10038400ADC-191113
  UNTIL (IMIN > IMAX);                                                  10038600ADC-191113
 END OF KEYWORD;                                                        10038800ADC-191113
 REAL PROCEDURE ESCAPE;                                                 10039000ADC-191113
 BEGIN                                                                  10039200ADC-191113
   LABEL   EXIT;                                                        10039400ADC-191113
   REAL    INX, INITIAL_IESCSTACK;                                      10039600ADC-191113
   IF (IESCSTACK < 0) THEN GO TO EXIT;                                  10039800ADC-191113
   INITIAL_IESCSTACK := IESCSTACK;                                      10040000ADC-191113
   WHILE (PTOKEN NEQ ETXTOK)                                            10040200ADC-191113
   DO   BEGIN                                                           10040400ADC-191113
        WHILE (IESCSTACK >= 0)                                          10040600ADC-191113
        DO   BEGIN                                                      10040800ADC-191113
             INX := ESCSTACK [IESCSTACK];                               10041000ADC-191113
             CASE INX                                                   10041200ADC-191113
             OF   BEGIN                                                 10041400ADC-191113
                  CASE_ESCAPE;                                          10041600ADC-191113
             END OF CASE;                                               10041800ADC-191113
            IESCSTACK := * - 1;                                         10042000ADC-191113
            END;                                                        10042200ADC-191113
        NEXTTOKEN;                                                      10042400ADC-191113
    IESCSTACK := INITIAL_IESCSTACK;                                     10042600ADC-191113
    END;                                                                10042800ADC-191113
  INX := 0;                                                             10043000ADC-191113
 EXIT:                                                                  10043200ADC-191113
  ESCAPE := INX;                                                        10043400ADC-191113
 END OF ESCAPE;                                                         10043600ADC-191113
                                                                        10043800ADC-191113
 REAL PROCEDURE GETPROGRAM;                                             10044000ADC-191113
 BEGIN                                                                  10044200ADC-191113
                                                                        10044400ADC-191113
    LABEL        EXIT, LABA1, LABA2A1, LABA2B1;                         10044600ADC-191113
    BOOLEAN      ENTITYENTERED;                                         10044800ADC-191113
    REAL         INITIAL_IESCSTACK,                                     10045000ADC-191113
                 INXESCAPELABEL,                                        10045200ADC-191113
                 ENTITYRESULT,                                          10045400ADC-191113
                 INVOKERESULT;                                          10045600ADC-191113
    INTEGER actualLevel, len;                                           10045800ADC-191113
    ENTITYENTERED := TRUE;                                              10046000ADC-191113
 LABA1:                                                                 10046200ADC-191113
 LABA2A1:                                                               10046400ADC-191113
    IF (INVOKERESULT := GETLEVEL(0, actualLevel, 0, len) NEQ 0)         10046600ADC-191113
    THEN BEGIN                                                          10046800ADC-191113
         IF (INVOKERESULT = ISNTENTITY) THEN GO TO LABA2B1;             10047000ADC-191113
         RETURN (BADENTITY);                                            10047200ADC-191113
         END;                                                           10047400ADC-191113
    ENTITYENTERED := TRUE;                                              10047600ADC-191113
    GO TO LABA1;                                                        10047800ADC-191113
 LABA2B1:                                                               10048000ADC-191113
 EXIT:                                                                  10048200ADC-191113
    GETPROGRAM := ENTITYRESULT;                                         10048400ADC-191113
 END OF GETPROGRAM;                                                     10048600ADC-191113
                                                                        10048800ADC-191113
 REAL PROCEDURE GETLEVEL(inxFather, prevLevel, off, len);               10049000ADC-191113
 VALUE inxFather, prevLevel, off;                                       10049200ADC-191113
 INTEGER inxFather, prevLevel,off,len;                                  10049400ADC-191113
 BEGIN                                                                  10049600ADC-191113
                                                                        10049800ADC-191113
    LABEL        EXIT, LABA1, LABA2A1, LABA2A2A1, LABA2A2A2A1,          10050000ADC-191113
                 LABA2A2A2B1, LABA2B1, LABA2B2A1, LABA2B2B1, LABA2B3A1, 10050200ADC-191113
                 LABA2B3A2A1, LABA2B3A2B1, LABA2B3B1, LABA2B5, LABA2C1, 10050400ADC-191113
                 LABA2C2A1, LABA2C2A2A1, LABA2C2A2B1;                   10050600ADC-191113
    BOOLEAN      ENTITYENTERED;                                         10050800ADC-191113
    REAL         INITIAL_IESCSTACK,                                     10051000ADC-191113
                 INXESCAPELABEL,                                        10051200ADC-191113
                 ENTITYRESULT,                                          10051400ADC-191113
                 INVOKERESULT;                                          10051600ADC-191113
    INTEGER actualLevel, inx, childOff, childLen;                       10051800ADC-191113
 LABA1:                                                                 10052000ADC-191113
    IF (PTOKEN NEQ NUMTOK)                                              10052200ADC-191113
    THEN BEGIN                                                          10052400ADC-191113
         IF (NOT ENTITYENTERED) THEN RETURN (ISNTENTITY);               10052600ADC-191113
         ERROR ("<NUMERO> EXPECTED");                                   10052800ADC-191113
         RETURN (BADENTITY);                                            10053000ADC-191113
         END;                                                           10053200ADC-191113
    ENTITYENTERED := TRUE;                                              10053400ADC-191113
    IF (vlToken LEQ prevLevel) THEN                                     10053600ADC-191113
      RETURN (ISNTENTITY);                                              10053800ADC-191113
    actualLevel := vlToken;                                             10054000ADC-191113
    NEXTTOKEN;                                                          10054200ADC-191113
    IF (PTOKEN NEQ IDNTOK)                                              10054400ADC-191113
    THEN BEGIN                                                          10054600ADC-191113
         ERROR ("<IDENTIFICADOR> EXPECTED");                            10054800ADC-191113
         RETURN (BADENTITY);                                            10055000ADC-191113
         END;                                                           10055200ADC-191113
    inx := getAreaTABDB(CDB_GROUPSIZE*6+szToken+1);                     10055400ADC-191113
    REPLACE PDB_NAME(inx) BY pTok FOR szToken+szBytes;                  10055600ADC-191113
    VDB_OFFSET(inx) := off DIV 1;                                       10055800ADC-191113
    VDB_OCCURS(inx) := 1 DIV 1;                                         10056000ADC-191113
    IF actualLevel = 1 THEN addIspec(inx)                               10056200ADC-191113
    ELSE addChild(inxFather, inx);                                      10056400ADC-191113
    NEXTTOKEN;                                                          10056600ADC-191113
 LABA2A1:                                                               10056800ADC-191113
    IF (PTOKEN NEQ CHRTOK 48"01"".") THEN GO TO LABA2B1;                10057000ADC-191113
    NEXTTOKEN;                                                          10057200ADC-191113
    childOff := 0;                                                      10057400ADC-191113
 LABA2A2A1:                                                             10057600ADC-191113
    childLen := 0;                                                      10057800ADC-191113
 LABA2A2A2A1:                                                           10058000ADC-191113
    IF (INVOKERESULT := GETLEVEL(inx, actualLevel, childOff, childLen)  10058200ADC-191113
    NEQ 0)                                                              10058400ADC-191113
    THEN BEGIN                                                          10058600ADC-191113
         IF (INVOKERESULT = ISNTENTITY) THEN GO TO LABA2A2A2B1;         10058800ADC-191113
         RETURN (BADENTITY);                                            10059000ADC-191113
         END;                                                           10059200ADC-191113
    childOff :=* + childLen;                                            10059400ADC-191113
    len :=* + childLen;                                                 10059600ADC-191113
    VDB_LENGTH(inx) := len DIV 1;                                       10059800ADC-191113
    GO TO LABA2A2A1;                                                    10060000ADC-191113
 LABA2A2A2B1:                                                           10060200ADC-191113
    GO TO EXIT;                                                         10060400ADC-191113
 LABA2B1:                                                               10060600ADC-191113
    IF (PTOKEN NEQ RESTOK 48"03""PIC") THEN GO TO LABA2C1;              10060800ADC-191113
    NEXTTOKEN;                                                          10061000ADC-191113
    VDB_LENGTH(inx) := 1; %Por default                                  10061200ADC-191113
 LABA2B2A1:                                                             10061400ADC-191113
    IF (PTOKEN NEQ NUMTOK) THEN GO TO LABA2B2B1;                        10061600ADC-191113
    NEXTTOKEN;                                                          10061800ADC-191113
    VDB_PIC(inx) := CDB_NUMERIC DIV 1;                                  10062000ADC-191113
    GO TO LABA2B3A1;                                                    10062200ADC-191113
 LABA2B2B1:                                                             10062400ADC-191113
    IF (PTOKEN NEQ RESTOK 48"01""X")                                    10062600ADC-191113
    THEN BEGIN                                                          10062800ADC-191113
         ERROR ("ONE OF THE FOLLOWING EXPECTED");                       10063000ADC-191113
         SEND ("<NUMERO>");                                             10063200ADC-191113
         SEND ("X");                                                    10063400ADC-191113
         RETURN (BADENTITY);                                            10063600ADC-191113
         END;                                                           10063800ADC-191113
    NEXTTOKEN;                                                          10064000ADC-191113
    VDB_PIC(inx) := CDB_ALPHA DIV 1;                                    10064200ADC-191113
 LABA2B3A1:                                                             10064400ADC-191113
    IF (PTOKEN NEQ CHRTOK 48"01""(") THEN GO TO LABA2B3B1;              10064600ADC-191113
    NEXTTOKEN;                                                          10064800ADC-191113
    IF (PTOKEN NEQ NUMTOK)                                              10065000ADC-191113
    THEN BEGIN                                                          10065200ADC-191113
         ERROR ("<NUMERO> EXPECTED");                                   10065400ADC-191113
         RETURN (BADENTITY);                                            10065600ADC-191113
         END;                                                           10065800ADC-191113
    VDB_LENGTH(inx) := vlToken DIV 1;                                   10066000ADC-191113
    NEXTTOKEN;                                                          10066200ADC-191113
    IF (PTOKEN NEQ CHRTOK 48"01"")")                                    10066400ADC-191113
    THEN BEGIN                                                          10066600ADC-191113
         ERROR (") EXPECTED");                                          10066800ADC-191113
         RETURN (BADENTITY);                                            10067000ADC-191113
         END;                                                           10067200ADC-191113
    NEXTTOKEN;                                                          10067400ADC-191113
 LABA2B3A2A1:                                                           10067600ADC-191113
    IF (PTOKEN NEQ RESTOK 48"02""V9") THEN GO TO LABA2B3A2B1;           10067800ADC-191113
    NEXTTOKEN;                                                          10068000ADC-191113
    IF (PTOKEN NEQ CHRTOK 48"01""(")                                    10068200ADC-191113
    THEN BEGIN                                                          10068400ADC-191113
         ERROR ("( EXPECTED");                                          10068600ADC-191113
         RETURN (BADENTITY);                                            10068800ADC-191113
         END;                                                           10069000ADC-191113
    NEXTTOKEN;                                                          10069200ADC-191113
    IF (PTOKEN NEQ NUMTOK)                                              10069400ADC-191113
    THEN BEGIN                                                          10069600ADC-191113
         ERROR ("<NUMERO> EXPECTED");                                   10069800ADC-191113
         RETURN (BADENTITY);                                            10070000ADC-191113
         END;                                                           10070200ADC-191113
    VDB_DECIMALS(inx) := vlToken DIV 1;                                 10070400ADC-191113
    NEXTTOKEN;                                                          10070600ADC-191113
    IF (PTOKEN NEQ CHRTOK 48"01"")")                                    10070800ADC-191113
    THEN BEGIN                                                          10071000ADC-191113
         ERROR (") EXPECTED");                                          10071200ADC-191113
         RETURN (BADENTITY);                                            10071400ADC-191113
         END;                                                           10071600ADC-191113
    NEXTTOKEN;                                                          10071800ADC-191113
    GO TO LABA2B5;                                                      10072000ADC-191113
 LABA2B3A2B1:                                                           10072200ADC-191113
    GO TO LABA2B5;                                                      10072400ADC-191113
 LABA2B3B1:                                                             10072600ADC-191113
 LABA2B5:                                                               10072800ADC-191113
    IF (PTOKEN NEQ CHRTOK 48"01"".")                                    10073000ADC-191113
    THEN BEGIN                                                          10073200ADC-191113
         ERROR (". EXPECTED");                                          10073400ADC-191113
         RETURN (BADENTITY);                                            10073600ADC-191113
         END;                                                           10073800ADC-191113
    NEXTTOKEN;                                                          10074000ADC-191113
    len := VDB_LENGTH(inx) + VDB_DECIMALS(inx);                         10074200ADC-191113
    GO TO EXIT;                                                         10074400ADC-191113
 LABA2C1:                                                               10074600ADC-191113
    IF (PTOKEN NEQ RESTOK 48"06""OCCURS")                               10074800ADC-191113
    THEN BEGIN                                                          10075000ADC-191113
         ERROR ("ONE OF THE FOLLOWING EXPECTED");                       10075200ADC-191113
         SEND (".");                                                    10075400ADC-191113
         SEND ("PIC");                                                  10075600ADC-191113
         SEND ("OCCURS");                                               10075800ADC-191113
         RETURN (BADENTITY);                                            10076000ADC-191113
         END;                                                           10076200ADC-191113
    NEXTTOKEN;                                                          10076400ADC-191113
    IF (PTOKEN NEQ NUMTOK)                                              10076600ADC-191113
    THEN BEGIN                                                          10076800ADC-191113
         ERROR ("<NUMERO> EXPECTED");                                   10077000ADC-191113
         RETURN (BADENTITY);                                            10077200ADC-191113
         END;                                                           10077400ADC-191113
    VDB_OCCURS(inx) := vlToken DIV 1;                                   10077600ADC-191113
    NEXTTOKEN;                                                          10077800ADC-191113
    IF (PTOKEN NEQ CHRTOK 48"01"".")                                    10078000ADC-191113
    THEN BEGIN                                                          10078200ADC-191113
         ERROR (". EXPECTED");                                          10078400ADC-191113
         RETURN (BADENTITY);                                            10078600ADC-191113
         END;                                                           10078800ADC-191113
    NEXTTOKEN;                                                          10079000ADC-191113
    childOff := 0;                                                      10079200ADC-191113
 LABA2C2A1:                                                             10079400ADC-191113
    childLen := 0;                                                      10079600ADC-191113
 LABA2C2A2A1:                                                           10079800ADC-191113
    IF (INVOKERESULT := GETLEVEL(inx, actualLevel, childOff, childLen)  10080000ADC-191113
    NEQ 0)                                                              10080200ADC-191113
    THEN BEGIN                                                          10080400ADC-191113
         IF (INVOKERESULT = ISNTENTITY) THEN GO TO LABA2C2A2B1;         10080600ADC-191113
         RETURN (BADENTITY);                                            10080800ADC-191113
         END;                                                           10081000ADC-191113
    childOff :=* + childLen;                                            10081200ADC-191113
    GO TO LABA2C2A1;                                                    10081400ADC-191113
 LABA2C2A2B1:                                                           10081600ADC-191113
    len := childOff * VDB_OCCURS(inx);                                  10081800ADC-191113
    VDB_LENGTH(inx) := len DIV 1;                                       10082000ADC-191113
 EXIT:                                                                  10082200ADC-191113
    GETLEVEL := ENTITYRESULT;                                           10082400ADC-191113
 END OF GETLEVEL;                                                       10082600ADC-191113
                                                                        10082800ADC-191113
 %----------------------------------------------------------------------10083000ADC-191113
    PTOKEN    := TOKARRAY;                                              10083200ADC-191113
    PTOK      := PTOKEN+SZTYPETOK;                                      10083400ADC-191113
    IESCSTACK := -1;                                                    10083600ADC-191113
 %----------------------------------------------------------------------10083800ADC-191113
    INICIO;                                                             10084000ADC-191113
    NEXTTOKEN;                                                          10084200ADC-191113
    GETPROGRAM;                                                         10084400ADC-191113
    PROCESO;                                                            10084600ADC-191113
 END of getLINCOFF;                                                     10173900          
                                                                        10174000          
 PROCEDURE dumpGroup(inx);                                              10174002ADC-191113
   VALUE             inx;                                               10174004ADC-191113
   INTEGER           inx;                                               10174006ADC-191113
   BEGIN                                                                10174008ADC-191113
   INTEGER                                                              10174010ADC-191113
     inxChild                                                           10174012ADC-191113
    ;                                                                   10174014ADC-191113
   POINTER                                                              10174016ADC-191113
     p                                                                  10174018ADC-191113
    ;                                                                   10174020ADC-191113
   PROCEDURE printItem(inxg);                                           10174022ADC-191113
     VALUE             inxg;                                            10174024ADC-191113
     INTEGER           inxg;                                            10174026ADC-191113
     BEGIN                                                              10174028ADC-191113
                                                                        10174030ADC-191113
     REPLACE p:dummy                                                    10174032ADC-191113
          BY PDB_NAME(inxg)+szBytes                                     10174034ADC-191113
              FOR REAL(PDB_NAME(inxg),1), " " FOR 20;                   10174036ADC-191113
     REPLACE p:dummy[20]                                                10174038ADC-191113
          BY VDB_OFFSET(inxg) FOR 4 DIGITS, "|",                        10174040ADC-191113
             VDB_OCCURS(inxg) FOR 2 DIGITS, "|",                        10174042ADC-191113
             VDB_LENGTH(inxg) FOR 4 DIGITS, "|",                        10174044ADC-191113
             VDB_DECIMALS(inxg) FOR 2 DIGITS, "|",                      10174046ADC-191113
             "N"FOR REAL(VDB_PIC(inxg)=CDB_NUMERIC).[0:1],              10174048ADC-191113
             "A"FOR REAL(VDB_PIC(inxg)=CDB_ALPHA).[0:1];                10174050ADC-191113
     WRITE(line, 132, dummy);                                           10174052ADC-191113
     END of printItem;                                                  10174054ADC-191113
                                                                        10174056ADC-191113
   inxChild := VDB_FIRSTITEM(inx);                                      10174058ADC-191113
   WHILE inxChild ^= NIL DO                                             10174060ADC-191113
     BEGIN                                                              10174062ADC-191113
     printItem(inxChild);                                               10174064ADC-191113
     IF VDB_PIC(inxChild) = CDB_GROUP THEN                              10174066ADC-191113
       dumpGroup(inxChild);                                             10174068ADC-191113
     inxChild := VDB_NEXTGROUP(inxChild);                               10174070ADC-191113
     END;                                                               10174072ADC-191113
   END of dumpGroup;                                                    10174074ADC-191113
                                                                        10174076ADC-191113
 PROCEDURE printGroup(inx, off, len);                                   10174100ADC-191112
   VALUE              inx, off, len;                                    10174200ADC-191112
   INTEGER            inx, off, len;                                    10174300ADC-191112
   BEGIN                                                                10174400          
   INTEGER                                                              10174500          
     inxChild                                                           10174600          
    ,i                                                                  10174650ADC-191112
    ;                                                                   10174700          
   POINTER                                                              10174800          
     p                                                                  10174900          
    ;                                                                   10175000          
                                                                        10175100          
   inxChild := VDB_FIRSTITEM(inx);                                      10175200          
   WHILE inxChild ^= NIL DO                                             10175300          
     BEGIN                                                              10175400          
     IF VDB_PIC(inxChild) = CDB_GROUP THEN                              10175500          
       printGroup(inxChild, off+VDB_OFFSET(inxChild),                   10175600ADC-191113
                  VDB_LENGTH(inxChild))                                 10175650ADC-191113
     ELSE                                                               10175700          
       BEGIN                                                            10175800          
       IF PDB_NAME(inxChild) ^= 48"06""FILLER" AND                      10175810ADC-191112
          PDB_NAME(inxChild)+6 ^= "GLB-SOURCE" AND                      10175820ADC-191112
          PDB_NAME(inxChild)+6 ^= "TRANNO" AND                          10175830ADC-191112
          PDB_NAME(inxChild)+6 ^= "INPUT-DATE" AND                      10175840ADC-191112
          PDB_NAME(inxChild)+6 ^= "ACTMTH" AND                          10175850ADC-191112
          PDB_NAME(inxChild)+6 ^= "ISPEC" THEN                          10175855ADC-191112
         BEGIN                                                          10175860ADC-191112
         i := 0;                                                        10175870ADC-191112
         THRU VDB_OCCURS(inx) DO                                        10175880ADC-191112
           BEGIN                                                        10175890ADC-191112
           REPLACE p:dummy                                              10175900          
                BY PDB_NAME(inxChild)+szBytes FOR 5, "|",               10176000ADC-191112
                   PDB_NAME(inxChild)+(szBytes+5)                       10176100ADC-191112
                    FOR (REAL(PDB_NAME(inxChild),1)-5)," " FOR 10;      10176150ADC-191112
           REPLACE p:dummy[16]                                          10176160ADC-191112
                BY "|",(i+1)FOR 2 DIGITS,                               10176200ADC-191112
                   "|",(off+VDB_OFFSET(inxChild)                        10176300ADC-191113
                         +i*VDB_LENGTH(inx)/VDB_OCCURS(inx)-151)        10176350ADC-191113
                          FOR 4 DIGITS,                                 10176360ADC-191113
                   "|",VDB_LENGTH(inxChild) FOR 2 DIGITS,               10176400ADC-191112
                   "|",VDB_DECIMALS(inxChild) FOR 2 DIGITS,             10176500ADC-191112
                   "|","N"FOR REAL(VDB_PIC(inxChild)=CDB_NUMERIC).[0:1],10176600ADC-191112
                       "A"FOR REAL(VDB_PIC(inxChild)=CDB_ALPHA).[0:1],  10176700ADC-191112
                   "|","N",                                             10176800          
                   "|"," ",                                             10176900          
                   "|","R"FOR REAL(VDB_PIC(inxChild)=CDB_NUMERIC).[0:1],10177000ADC-191112
                       "L"FOR REAL(VDB_PIC(inxChild)=CDB_ALPHA).[0:1],  10177100ADC-191112
                   "|"," " FOR 132;                                     10177200ADC-191112
           WRITE(line, 132, dummy);                                     10177300ADC-191112
           i :=*+1;                                                     10177320ADC-191112
           END;                                                         10177340ADC-191112
         END;                                                           10177350ADC-191112
       END;                                                             10177400          
     inxChild := VDB_NEXTGROUP(inxChild);                               10177500          
     END;                                                               10177600          
   END of printGroup;                                                   10177700          
                                                                        10177720ADC-191113
 VDB_SIZE := CDB_SIZEINITIAL DIV 1;                                     10177740ADC-191113
 VDB_VERSION := CDB_VERSION DIV 1;                                      10177760ADC-191113
 VDB_FIRSTAVAIL := CDB_FIRSTAVAILINITIAL DIV 1;                         10177780ADC-191113
                                                                        10177800          
 REPLACE dummy BY LINCOFF.TITLE;                                        10177820ADC-191113
 IF dummy = "LINCOFF." THEN                                             10177840ADC-191113
   BEGIN                                                                10177860ADC-191113
   REPLACE dummy BY MYSELF.USERCODE;                                    10177900          
   SCAN p:dummy UNTIL = ".";                                            10178000          
   p :=* - 1;                                                           10178100          
   REPLACE p BY "/LINCOFF."48"00";                                      10178200          
   REPLACE LINCOFF.TITLE BY dummy;                                      10178300          
   END;                                                                 10178350ADC-191113
                                                                        10178400          
 getLINCOFF;                                                            10178500          
                                                                        10178600ADC-191113
 REPLACE dummy BY " " FOR 132;                                          10178610ADC-191113
 inx := VDB_FIRSTISPEC;                                                 10178620ADC-191113
 WHILE inx ^= NIL DO                                                    10178630ADC-191113
   BEGIN                                                                10178640ADC-191113
%  dumpGroup(inx);                                                      10178650ADC-191113
   inx := VDB_NEXTGROUP(inx);                                           10178660ADC-191113
   END;                                                                 10178670ADC-191113
                                                                        10178680ADC-191113
 inx := VDB_FIRSTISPEC;                                                 10178700          
 WHILE inx ^= NIL DO                                                    10178800          
   BEGIN                                                                10178900          
   printGroup(inx, 0, VDB_LENGTH(inx));                                 10179000ADC-191112
   inx := VDB_NEXTGROUP(inx);                                           10179100          
   END;                                                                 10179200          
 END.                                                                   10179300          
